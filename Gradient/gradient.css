/* Using CSS gradients */
/* CSS gradients are represented by the <gradient> data type, a special type of <image> made of a progressive transition between two or more colors.

Three types of gradients: 
1. linear (created with the linear-gradient() function)
2. radial (created with the radial-gradient() function) 
3. conic (created with the conic-gradient() function). 

You can also create repeating gradients with the repeating-linear-gradient(), repeating-radial-gradient(), and repeating-conic-gradient() functions.


Using linear gradients:

  linear-gradient(): The linear-gradient() CSS function creates an image consisting of a progressive transition between two or   more colors along a straight line. 

  Because <gradient>s belong to the <image> data type, they can only be used where <image>s can be used. For this reason,     
  linear-gradient() won't work on background-color and other properties that use the <color> data type.

  Syntax: 
    
        A gradient tilted 45 degrees, starting blue and finishing red
        linear-gradient(45deg , blue , red);

        A gradient going from the bottom right to the top left corner,  starting blue and finishing red 
        linear-gradient(to left top, blue , red);

        Color stop: A gradient going from the bottom to top, starting blue, turning green at 40% of its length, and finishing   red
          linear-gradient(0deg, blue , green 40% , red);

        Color hint: A gradient going from the left to right, starting red, getting to the midpoint color 10% of the way across  the length of the gradient, taking the rest of the 90% of the length to change to blue 
          linear-gradient(.25turn,red,10%,blue);

         Multi-position color stop: A gradient tilted 45 degrees, with a red bottom-left half and a blue top-right half,
          with a hard line where the gradient changes from red to blue 
            linear-gradient(45deg, red 0 50%,blue 50% 100%);

          linear-gradient(direction,color1,color2);
          linear-gradient(<side-or-corner> , <angle> , <linear-color-stop> , <color-hint>);

            Values
              side-or-corner:  The position of the gradient line's starting point. If specified, it consists of the word to and up to two keywords: the horizontal side (left or right), and  the vertical side (top or bottom). 
                            to top  =  0deg
                            to bottom = 100dge
                            to left = 270deg
                            to right = 90deg
              color-hint: An interpolation hint defining how the gradient progresses between adjacent color stops. The length   defines at which point between two color stops the gradient color should reach the midpoint of the  color transition.  */

.linear-gradient{
    width: 48%;
    height: 250px;
    margin: 10px auto;
    
    /* Customizing Gradients */
    /* By adding more color-stop points on the gradient line, you can create a highly customized transition betwemultiple colors. */
    
    /* background: linear-gradient(red,orange,yellow,green,blue); */
    /* The following two gradients are equivalent. */
    /* background: linear-gradient(red 0%,orange 25%,yellow 50%,green 75%,blue 100%); */
    
      
    /* The following example is solid red from the start to the 10% mark and solid blue from 90% to the enBetween 10% and 90% the color transitions from red to blue, however, the midpoint of the transition is at t30% mark rather than 50% as would have happened without the 30% color hint. */
    /* If two or more color-stops are at the same location, the transition will be a hard line between the firand last colors declared at that location. */
    
    /* background: linear-gradient(red 10%, 50%, blue 90%); */
    
    
    /* The following changes from red to yellow at the 40% mark, and then transitions from yellow to blue over 2of the gradient: */
    
    /* background: linear-gradient(red 40%,yellow 30%, blue 65%); */
    
    
    /* Multi-position color-stops are allowed. A color can be declared as two adjacent color-stops by includiboth positions in the CSS declaration. The following three gradients are equivalent: */
    
    /* background: linear-gradient(red 0%,orange 10%,orange 30%,yellow 50%,yellow 70%,blue 90%,blue 100%); */
    /* background: linear-gradient(red 0%,orange 10% 30%,yellow 50% 70%,blue 90%); */
    /* background: linear-gradient(red 0%,orange 10% 30%,yellow 50% 70%,blue 90% 100%); */
    
    
    /* example */
    
    /* A basic linear gradient */
    /* background: linear-gradient(blue , pink); */
              
    /* Changing the direction */
    /* background: linear-gradient(to left, blue , pink); */
    
    /* Diagonal gradients */
    /* background: linear-gradient(to top right, blue , pink); */
    
    /* Creating hard lines */
    /* background: linear-gradient(to bottom right, blue 50%, pink 50%); */
    
    /* Gradient at a 45-degree angle */
    /* background: linear-gradient(45deg, red, yellow); */
    
    /* Gradient that starts at 60% of the gradient line */
    /* background: linear-gradient(135deg, yellow 60%, cyan); */
    
    /* Gradient with multi-position color-stops */
    /* background: linear-gradient(90deg,red 20%,orange 20% 40%,yellow 40% 60%,green 60% 80%,blue 80%); */
    
    /* Overlaying gradients */
    /* background: linear-gradient(to right, transparent, mistyrose) , url('/Layout/Image/aaesthetic.jpg') no-repeat; */

    /* compare to repeating linear gradient*/
    background: linear-gradient(-45deg , red 0 120px , black 20px 40px);
    background: linear-gradient(to bottom , red , green 7% , yellow 10%);
    background: linear-gradient(
      190deg,
      rgba(255, 0, 0, 0.5) 40px,
      rgba(255, 153, 0, 0.5) 80px,
      rgba(255, 255, 0, 0.5) 120px,
      rgba(0, 255, 0, 0.5) 160px,
      rgba(0, 0, 255, 0.5) 200px,
      rgba(75, 0, 130, 0.5) 240px,
      rgba(238, 130, 238, 0.5) 280px,
      rgba(255, 0, 0, 0.5) 300px
    ), linear-gradient(
      -190deg,
      rgba(255, 0, 0, 0.5) 30px,
      rgba(255, 153, 0, 0.5) 60px,
      rgba(255, 255, 0, 0.5) 90px,
      rgba(0, 255, 0, 0.5) 120px,
      rgba(0, 0, 255, 0.5) 150px,
      rgba(75, 0, 130, 0.5) 180px,
      rgba(238, 130, 238, 0.5) 210px,
      rgba(255, 0, 0, 0.5) 230px
    ), linear-gradient(23deg, red 50px, orange 100px, yellow 150px, green
        200px, blue 250px, indigo 300px, violet 350px, red 370px);

        background: repeating-linear-gradient(
          90deg,
          transparent,
          transparent 50px,
          rgba(255, 127, 0, 0.25) 50px,
          rgba(255, 127, 0, 0.25) 56px,
          transparent 56px,
          transparent 63px,
          rgba(255, 127, 0, 0.25) 63px,
          rgba(255, 127, 0, 0.25) 69px,
          transparent 69px,
          transparent 116px,
          rgba(255, 206, 0, 0.25) 116px,
          rgba(255, 206, 0, 0.25) 166px
        ), repeating-linear-gradient(
          0deg,
          transparent,
          transparent 50px,
          rgba(255, 127, 0, 0.25) 50px,
          rgba(255, 127, 0, 0.25) 56px,
          transparent 56px,
          transparent 63px,
          rgba(255, 127, 0, 0.25) 63px,
          rgba(255, 127, 0, 0.25) 69px,
          transparent 69px,
          transparent 116px,
          rgba(255, 206, 0, 0.25) 116px,
          rgba(255, 206, 0, 0.25) 166px
        ), repeating-linear-gradient(
          -45deg,
          transparent,
          transparent 5px,
          rgba(143, 77, 63, 0.25) 5px,
          rgba(143, 77, 63, 0.25) 10px
        ), repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(
              143,
              77,
              63,
              0.25
            ) 5px, rgba(143, 77, 63, 0.25) 10px);
    
      background: linear-gradient(
          90deg,
          transparent 0 50px,
          rgba(255, 127, 0, 0.25) 50px 56px,
          transparent 56px 63px,
          rgba(255, 127, 0, 0.25) 63px 69px,
          transparent 69px 116px,
          rgba(255, 206, 0, 0.25) 116px 166px
        )
        , linear-gradient(
          0deg,
          transparent 0 50px,
          rgba(255, 127, 0, 0.25) 50px 56px,
          transparent 56px 63px,
          rgba(255, 127, 0, 0.25) 63px 69px,
          transparent 69px 116px,
          rgba(255, 206, 0, 0.25) 116px 166px
        ), linear-gradient(
          -45deg,
          transparent 0 5px,
          rgba(143, 77, 63, 0.25) 5px 10px
        ), linear-gradient(45deg, transparent 0 5px, rgba(
              143,
              77,
              63,
              0.25
            ) 5px 10px);


    /* Stacked gradients */
    /* You can even stack gradients with other gradients. As long as the top gradients aren't entirely opaque, tgradients below will still be visible. */
    
      /* background: 
        linear-gradient(217deg, rgba(255, 0, 0, 0.8), rgba(255, 0, 0, 0) 70.71%), 
        linear-gradient(127deg, rgba(0, 255, 0, 0.8), rgba(0, 255, 0, 0) 70.71%),
        linear-gradient(336deg, rgba(0, 0, 255, 0.8), rgba(0, 0, 255, 0) 70.71%); */
}


/* radial-gradient(): The radial-gradient() CSS function creates an image consisting of a progressive transition between two or more colors that radiate from an origin. Its shape may be a circle or an ellipse. 

A radial gradient is specified by indicating the center of the gradient (where the 0% ellipse will be) and the size and shape of the ending shape (the 100% ellipse).

Because <gradient>s belong to the <image> data type, they can only be used where <image>s can be used. For this reason, radial-gradient() won't work on background-color and other properties that use the <color> data type.

Syntax:
        radial-gradient: circle at circle, red 0%, blue , green 100%;
        radial-gradient: <ending-shaps> <size> at <position> , <color-stop-list>

        Value
            <position>: The position of the gradient, interpreted in the same way as background-position or transform-origin. If unspecified, it defaults to center.
            left , right , top , bottom , center , length-percentage , left top , length-percentage length-percentage

            <ending-shape>: The value can be circle (meaning that the gradient's shape is a circle with a constant radius) or ellipse (meaning that the shape is an axis-aligned ellipse). If unspecified, it defaults to ellipse.

            <size>:  If omitted it defaults to farthest-corner. It can be given explicitly or by keyword.
                closest-side , closest-corner , farthest-side	, farthest-corner	

            <linear-color-stop>: A color-stop's <color> value, followed by one or two optional stop positions (either a <percentage> or a <length> along the gradient's axis). A percentage of 0%, or a length of 0, represents the center of the gradient; the value 100% represents the intersection of the ending shape with the virtual gradient ray.

            <color-hint>: The length defines at which point between two color stops the gradient color should reach the midpoint of the color transition. */


.radial-gradient{
  width: 40%;
  height: 250px;
  margin: 10px auto;
  border: 1px solid black;
  border-radius: 5px;

  /* A basic radial gradient */
  background: radial-gradient(red , blue);


  /* Positioning radial color stops */
  background: radial-gradient(red 20% , green 66%, blue 60%);


  /* Positioning the center of the gradient */
  /* You can position the center of the gradient with keyterms, percentage, or absolute lengths, length and percentage values repeating if only one is present, otherwise in the order of position from the left and position from the top. */
  background: radial-gradient(at 0% 53%,red 10px, yellow 30% , green 30%);


  /* Sizing radial gradients */
  /* Unlike linear gradients, you can specify the size of radial gradients. Possible values include closest-corner, closest-side, farthest-corner, and farthest-side, with farthest-corner being the default. */


  /* closest-side for ellipses:  the distance from the starting point (the center) to the closest side of the enclosing box. */
  background: radial-gradient(ellipse closest-side,red , yellow 10% , hotpink 80%);


  /* farthest-corner for ellipses:  the distance from the starting point to the farthest corner of the enclosing box from the starting point. */
  background: radial-gradient(ellipse farthest-corner at 90% 90%, red , yellow 60% , hotpink 70%);


  /* closest-side for circles:  the distance between the center and the bottom edge, because the gradient is placed 25% from the left and 25% from the bottom, and the div element's height is smaller than the width. */
  background: radial-gradient(circle closest-side at 25% 75% , red , yellow 60% , hotpink 70%);


  /* length or percentage for ellipses: The first value represents the horizontal radius, the second the vertical radius, where you use a percentage this corresponds to the size of the box in that dimension. In the below example I have used a percentage for the horizontal radius. */
  background: radial-gradient(ellipse 50% 50px, red,  yellow 10%,  #1e90ff 50%,  beige);


  /* length for circles */
  background: radial-gradient(circle 50px , red,  yellow 10%,  #1e90ff 50%,  beige);

  /* Non-centered gradient */
  background: radial-gradient(farthest-corner at 40px 40px,#f35 0%,  #43e 100%);

  background: radial-gradient(circle , red , yellow , green);


  /* Stacked radial gradients: you can also stack radial gradients. The first specified is on top, the last on the bottom. */
  background:  radial-gradient(circle at 50% 0,  rgba(255, 0, 0, 0.5),  rgba(255, 0, 0, 0) 70.71%  ),
               radial-gradient(circle at 6.7% 75%,   rgba(0, 0, 255, 0.5),    rgba(0, 0, 255, 0) 70.71%  ),
               radial-gradient(circle at 93.3% 75%,  rgba(0, 255, 0, 0.5), rgba(0, 255, 0, 0) 70.71% ) beige;;


    /* compare to repeating radial gradient */
    background: radial-gradient(black, black 5px, white 5px ,white 10px);
    background: radial-gradient(ellipse farthest-corner at 20% 20%,red,black 5% ,blue 5%,green 10%);
    background:
    radial-gradient(
      ellipse at 80% 50%,
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.5) 15px,
      rgba(255, 255, 255, 0.5) 15px,
      rgba(255, 255, 255, 0.5) 30px
    ) top left no-repeat,
    radial-gradient(
      ellipse at 20% 50%,
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.5) 10px,
      rgba(255, 255, 255, 0.5) 10px,
      rgba(255, 255, 255, 0.5) 20px
    ) top left no-repeat yellow;
}


/* Using conic gradients */
/* The conic-gradient() CSS function creates an image consisting of a gradient with color transitions rotated around a center point (rather than radiating from the center). Example conic gradients include pie charts and color wheels, but they can also be used for creating checker boards and other interesting effects.

The conic-gradient syntax is similar to the radial-gradient syntax, but the color-stops are placed around a gradient arc, the circumference of a circle, rather than on the gradient line emerging from the center of the gradient, and the color-stops are percentages or degrees: absolute lengths are not valid. */


/* Syntax: */
        /* A conic gradient rotated 45 degrees, starting blue and finishing red  */
                    /* conic-gradient(from 45deg, blue , red) */

        /* A bluish purple box: the gradient goes from blue to red,but only the bottom right quadrant is visible, as the          center of the conic gradient is at the top left corner */
                    /* conic-gradient(from 90deg at 0 0 , red , blue); */

        /* Color wheel  */
                    /* conic-gradient(
                              hsl(360, 100%, 50%),
                              hsl(315, 100%, 50%),
                              hsl(270, 100%, 50%),
                              hsl(225, 100%, 50%),
                              hsl(180, 100%, 50%),
                              hsl(135, 100%, 50%),
                              hsl(90, 100%, 50%),
                              hsl(45, 100%, 50%),
                              hsl(0, 100%, 50%)
                          ); */

/* The following two gradients are equivalent:
conic-gradient(red, orange, yellow, green, blue);
              same
conic-gradient(red 0deg, orange 90deg, yellow 180deg, green 270deg, blue 360deg); */


/* The following two declarations are equivalent:
conic-gradient(#fff 0.09turn, #bbb 0.09turn, #bbb 0.27turn, #666 0.27turn, #666 0.54turn, #000 0.54turn);
              same
conic-gradient(#fff 0turn 0.09turn, #bbb 0.09turn 0.27turn, #666 0.27turn 0.54turn, #000 0.54turn 1turn); */




.conic-gradient{
  width: 40%;
  height: 250px;
  margin: 10px auto;
  border: 1px solid black;
  border-radius: 5px;

  /* A basic conic gradient */
  background: conic-gradient(red,blue);

  /* Off-centered gradient CSS */
  background: conic-gradient(from 0deg at 0% 25%,red , blue , green);

  /* Gradient at 40-degrees */
  background: conic-gradient(from 45deg, #fff , #000);

  /* Gradient pie-chart */
  background: conic-gradient(red 36deg , orange 36deg 170deg , yellow 170deg);

  /* Gradient pie-chart */
  background: conic-gradient(
    #fff 0.25turn,
    #000 0.25turn 0.5turn,
    #fff 0.5turn 0.75turn,
    #000 0.75turn
  ) top left / 25% 25% repeat;

  /* compare to repeating conic gradient */
  background: conic-gradient(red 0%,yellow 15%,red 35%);
  background: conic-gradient(from 45deg at 10% 50%,brown 0deg 10deg,  darkgoldenrod 10deg 20deg,  chocolate 20deg 30deg);
  background-image: conic-gradient(#fff 0 9deg, #000 9deg 18deg);
  background: conic-gradient(
    from 3deg at 25% 25%,
    green,
    blue 2deg 5deg,
    green,
    yellow 15deg 18deg,
    green 20deg
  );

} 


/* Using repeating gradients */
/* The linear-gradient(), radial-gradient(), and conic-gradient() functions don't support automatically repeated color stops. However, the repeating-linear-gradient(), repeating-radial-gradient(), and repeating-conic-gradient() functions are available to offer this functionality. */


/* Repeating linear gradients */
/* The repeating-linear-gradient() CSS function creates an image consisting of repeating linear gradients. It is similar to linear-gradient() and takes the same arguments, but it repeats the color stops infinitely in all directions so as to cover its entire container.  */

.repeating-linear-gradient{
  width: 40%;
  height: 250px;
  margin: 10px auto;
  border: 1px solid black;
  border-radius: 5px;  

  /* example */

  /* Zebra stripes */
  background: repeating-linear-gradient(-45deg , red 0 20px , black 20px , black 40px);

  /* Ten repeating horizontal bars */
  /* Because the last color stop is 10% and the gradient is vertical, each gradient in the repeated gradient is 10% of the height, fitting 10 horizontal bars. */
  background: repeating-linear-gradient(to bottom, red , green 7% , yellow 10%);


  /* Multiple repeating linear gradients */
  background: repeating-linear-gradient(
      190deg,
      rgba(255, 0, 0, 0.5) 40px,
      rgba(255, 153, 0, 0.5) 80px,
      rgba(255, 255, 0, 0.5) 120px,
      rgba(0, 255, 0, 0.5) 160px,
      rgba(0, 0, 255, 0.5) 200px,
      rgba(75, 0, 130, 0.5) 240px,
      rgba(238, 130, 238, 0.5) 280px,
      rgba(255, 0, 0, 0.5) 300px
    ), repeating-linear-gradient(
      -190deg,
      rgba(255, 0, 0, 0.5) 30px,
      rgba(255, 153, 0, 0.5) 60px,
      rgba(255, 255, 0, 0.5) 90px,
      rgba(0, 255, 0, 0.5) 120px,
      rgba(0, 0, 255, 0.5) 150px,
      rgba(75, 0, 130, 0.5) 180px,
      rgba(238, 130, 238, 0.5) 210px,
      rgba(255, 0, 0, 0.5) 230px
    ), repeating-linear-gradient(23deg, red 50px, orange 100px, yellow 150px, green
        200px, blue 250px, indigo 300px, violet 350px, red 370px);


  /* Plaid gradient */
  /* To create plaid we include several overlapping gradients with transparency. In the first background declaration we listed every color stop separately. The second background property declaration using the multiple position color stop syntax: */

  background: repeating-linear-gradient(
      90deg,
      transparent,
      transparent 50px,
      rgba(255, 127, 0, 0.25) 50px,
      rgba(255, 127, 0, 0.25) 56px,
      transparent 56px,
      transparent 63px,
      rgba(255, 127, 0, 0.25) 63px,
      rgba(255, 127, 0, 0.25) 69px,
      transparent 69px,
      transparent 116px,
      rgba(255, 206, 0, 0.25) 116px,
      rgba(255, 206, 0, 0.25) 166px
    ), repeating-linear-gradient(
      0deg,
      transparent,
      transparent 50px,
      rgba(255, 127, 0, 0.25) 50px,
      rgba(255, 127, 0, 0.25) 56px,
      transparent 56px,
      transparent 63px,
      rgba(255, 127, 0, 0.25) 63px,
      rgba(255, 127, 0, 0.25) 69px,
      transparent 69px,
      transparent 116px,
      rgba(255, 206, 0, 0.25) 116px,
      rgba(255, 206, 0, 0.25) 166px
    ), repeating-linear-gradient(
      -45deg,
      transparent,
      transparent 5px,
      rgba(143, 77, 63, 0.25) 5px,
      rgba(143, 77, 63, 0.25) 10px
    ), repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(
          143,
          77,
          63,
          0.25
        ) 5px, rgba(143, 77, 63, 0.25) 10px);

  background: repeating-linear-gradient(
      90deg,
      transparent 0 50px,
      rgba(255, 127, 0, 0.25) 50px 56px,
      transparent 56px 63px,
      rgba(255, 127, 0, 0.25) 63px 69px,
      transparent 69px 116px,
      rgba(255, 206, 0, 0.25) 116px 166px
    ), repeating-linear-gradient(
      0deg,
      transparent 0 50px,
      rgba(255, 127, 0, 0.25) 50px 56px,
      transparent 56px 63px,
      rgba(255, 127, 0, 0.25) 63px 69px,
      transparent 69px 116px,
      rgba(255, 206, 0, 0.25) 116px 166px
    ), repeating-linear-gradient(
      -45deg,
      transparent 0 5px,
      rgba(143, 77, 63, 0.25) 5px 10px
    ), repeating-linear-gradient(45deg, transparent 0 5px, rgba(
          143,
          77,
          63,
          0.25
        ) 5px 10px);


}



/* repeating-radial-gradient() */
/* The repeating-radial-gradient() CSS function creates an image consisting of repeating gradients that radiate from an origin. It is similar to radial-gradient() and takes the same arguments, but it repeats the color stops infinitely in all directions so as to cover its entire container, similar to repeating-linear-gradient(). */

/* example */


/* Black and white gradient */
.repeating-radial-gradient{
  width: 40%;
  height: 250px;
  margin: 10px auto;
  border: 1px solid black;
  border-radius: 5px;    

  /* Black and white gradient */
  background: repeating-radial-gradient(black 0 5px, white 5px 10px);

  /* Farthest-corner */
  background: repeating-radial-gradient(ellipse farthest-corner at 20% 20%,red,black 5% ,blue 5%,green 10%);
  background: repeating-radial-gradient(ellipse farthest-corner at 20% 20%,red 0 5%,green 5% 10%);

  /* Multiple repeating radial gradients */
  background:
  repeating-radial-gradient(
      ellipse at 80% 50%,
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.5) 15px,
      rgba(255, 255, 255, 0.5) 15px,
      rgba(255, 255, 255, 0.5) 30px
    ) top left no-repeat,
  repeating-radial-gradient(
      ellipse at 20% 50%,
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.5) 10px,
      rgba(255, 255, 255, 0.5) 10px,
      rgba(255, 255, 255, 0.5) 20px
    ) top left no-repeat yellow;

}


/* repeating-conic-gradient() */
/* The repeating-conic-gradient() CSS function creates an image consisting of a repeating gradient (rather than a single gradient) with color transitions rotated around a center point (rather than radiating from the center). */

.repeating-conic-gradient{
  width: 40%;
  height: 250px;
  margin: 10px auto;
  border: 1px solid black;
  border-radius: 5px;    
  
  /* example */
  background: repeating-conic-gradient(red 0%,yellow 15%,red 35%);

  background: repeating-conic-gradient(from 45deg at 10% 50%,brown 0deg 10deg,  darkgoldenrod 10deg 20deg,  chocolate 20deg 30deg);

  /* Black and white starburst */
  background-image: repeating-conic-gradient(#fff 0 9deg, #000 9deg 18deg);

/* Off-centered gradient */
/* This gradient repeats 18 times, but since we only see the right half, we only see 9 repeats. */
background: repeating-conic-gradient(
    from 3deg at 25% 25%,
    green,
    blue 2deg 5deg,
    green,
    yellow 15deg 18deg,
    green 20deg
  );

}